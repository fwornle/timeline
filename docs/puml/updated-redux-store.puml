@startuml updated-redux-store
!theme plain
skinparam backgroundColor #FFFFFF
skinparam classStyle rectangle

title Redux Store Structure - Complete State Schema

class RootState {
  +timeline: TimelineState
  +ui: UIState
  +preferences: PreferencesState
  +repository: RepositoryState
  +logging: LoggingState ⭐
}

class TimelineState {
  +events: TimelineEvent[]
  +loading: boolean
  +error: string | null
  +gitCount: number
  +specCount: number
  +currentPosition: number
  +markerPosition: number ⭐
  +sourceType: 'git' | 'spec' | 'both'
  +isUsingMockData: boolean
  +lastFetchTime: number | null
  +thinnedEvents: TimelineEvent[] ⭐
  +cache: { [key: string]: CacheData }
  --
  Actions:
  +setEvents(events)
  +setLoading(loading)
  +setError(error)
  +setMarkerPosition(position) ⭐
  +setCurrentPosition(position)
  +setSourceType(type)
  +setThinnedEvents(events) ⭐
  +resetTimeline()
}

class UIState {
  +animationSpeed: number
  +autoDrift: boolean
  +droneMode: boolean
  +isAutoScrolling: boolean
  +viewAll: boolean
  +focusCurrentMode: boolean
  +debugMode: boolean
  +cameraCyclingMode: boolean
  +performanceProfilingEnabled: boolean
  +cameraState: CameraState ⭐
  +selectedCardId: string | null
  +hoveredCardId: string | null
  +showThinnedCards: boolean
  +visibleEventsCount: number ⭐
  +isViewportThinning: boolean ⭐
  +isMarkerDragging: boolean ⭐
  +isTimelineHovering: boolean ⭐
  +globalError: string | null ⭐
  +globalLoading: boolean ⭐
  +markerFadeOpacity: number ⭐
  +debugMarkerFade: boolean ⭐
  +fadedCardsTemporalRange: FadedCardsRange | null ⭐
  +showPreferences: boolean
  +showLoggingControl: boolean
  +sidebarOpen: boolean
  +isInitializing: boolean
  +isReloadingSoft: boolean
  +isReloadingHard: boolean
  +metricsPlotExpanded: boolean ⭐
  +metricsPlotHoveredPoint: number ⭐
  +metricsPlotVisibleMetrics: string[] ⭐
  +metricsPlotCalendarData: CalendarData | null ⭐
  +metricsPlotChartDimensions: ChartDimensions ⭐
  --
  Actions:
  +updateCameraState(state) ⭐
  +setSelectedCardId(id)
  +setHoveredCardId(id) ⭐
  +setShowThinnedCards(show)
  +setVisibleEventsCount(count) ⭐
  +setIsViewportThinning(thinning) ⭐
  +setIsMarkerDragging(dragging) ⭐
  +setIsTimelineHovering(hovering) ⭐
  +setGlobalError(error) ⭐
  +setGlobalLoading(loading) ⭐
  +setMarkerFadeOpacity(opacity) ⭐
  +setDebugMarkerFade(enabled) ⭐
  +setFadedCardsTemporalRange(range) ⭐
  +setDroneMode(enabled)
  +setViewAll(enabled)
  +setAnimationSpeed(speed)
  +setMetricsPlotExpanded(expanded) ⭐
  +setMetricsPlotHoveredPoint(point) ⭐
  +toggleMetricsPlotMetric(metric) ⭐
  +setMetricsPlotCalendarData(data) ⭐
  +setMetricsPlotChartDimensions(dims) ⭐
}

class RepositoryState {
  +url: string
  +username: string
  +isConnected: boolean
  +lastSyncTime: number | null
  +connectionError: string | null
  +isValidating: boolean
  +metadata: RepositoryMetadata | null
  --
  Actions:
  +setRepositoryUrl(url)
  +setUsername(username)
  +setIsConnected(connected)
  +setMetadata(metadata)
  +setConnectionError(error)
}

class PreferencesState {
  +repoUrl?: string
  +username?: string
  +animationSpeed?: number
  +autoDrift?: boolean
  +theme?: 'light' | 'dark' | 'system'
  +cameraState?: StoredCameraState ⭐
  +markerPosition?: number ⭐
  +isLoaded: boolean
  --
  Actions:
  +updatePreferences(prefs) ⭐
  +setPreferences(prefs)
  +refreshPreferences()
  +clearPreferences()
}

class LoggingState {
  +activeLevels: LogLevel[] ⭐
  +activeCategories: LogCategory[] ⭐
  +isLoggingEnabled: boolean ⭐
  --
  Actions:
  +setActiveLevels(levels) ⭐
  +setActiveCategories(categories) ⭐
  +toggleLogLevel(level) ⭐
  +toggleLogCategory(category) ⭐
  +setIsLoggingEnabled(enabled) ⭐
  +resetLogging() ⭐
}

class CameraState {
  +position: { x: number, y: number, z: number } ⭐
  +target: { x: number, y: number, z: number } ⭐
  +zoom: number ⭐
}

class StoredCameraState {
  +position: { x: number, y: number, z: number }
  +target: { x: number, y: number, z: number }
  +zoom: number
}

class FadedCardsRange {
  +minTimestamp: number
  +maxTimestamp: number
}

class CalendarData {
  +holidays: Holiday[]
  +bridgeDays: BridgeDay[]
  +year: number
  +country: string
}

class ChartDimensions {
  +width: number
  +height: number
  +visibleWidth: number
  +needsScrolling: boolean
  +dayWidth: number
  +visibleDays: number
}

class TimelineEvent {
  +id: string
  +type: 'git' | 'spec'
  +timestamp: Date
  +title: string
  +authorName?: string
  +authorEmail?: string
  +branch?: string
  +commitHash?: string
  +specType?: string
  +status?: string
  +version?: string
  +files?: FileChange[]
  +stats: EventStats
}

class EventStats {
  +filesChanged: number
  +linesAdded: number
  +linesRemoved: number
  +totalLines: number
}

class RepositoryMetadata {
  +name: string
  +owner: string
  +description: string
  +defaultBranch: string
  +lastUpdated: string
  +isPrivate: boolean
}

' Relationships
RootState --> TimelineState
RootState --> UIState
RootState --> RepositoryState
RootState --> PreferencesState
RootState --> LoggingState

UIState --> CameraState
UIState --> FadedCardsRange
UIState --> CalendarData
UIState --> ChartDimensions
PreferencesState --> StoredCameraState
TimelineState --> TimelineEvent
TimelineEvent --> EventStats
RepositoryState --> RepositoryMetadata

' Persistence relationships
note right of PreferencesState
  ⭐ markerPosition: Automatically persisted to localStorage
  ⭐ cameraState: Synced with UI slice cameraState
  All preferences restored on app initialization
end note

note bottom of TimelineState
  ⭐ markerPosition: Updated through updateTimelinePosition() intent
  ⭐ thinnedEvents: Events filtered out by viewport culling (NEW)
  Automatically saves to preferences via intents
end note

note bottom of UIState
  ⭐ cameraState: Synced with Three.js camera objects
  ⭐ NEW CENTRALIZED STATES: visibleEventsCount, isViewportThinning,
    isMarkerDragging, isTimelineHovering, globalError, globalLoading
  ⭐ Migrated from component local state and sessionStorage
  ⭐ Occlusion system: markerFadeOpacity, debugMarkerFade, fadedCardsTemporalRange
  ⭐ Metrics Plot states: metricsPlotExpanded, metricsPlotHoveredPoint,
    metricsPlotVisibleMetrics, metricsPlotCalendarData, metricsPlotChartDimensions
  Controls visual clarity through intelligent marker and card fading
  Metrics plot now fully managed through Redux following MVI pattern
end note

note right of LoggingState
  ⭐ NEW SLICE: Centralized logging configuration
  Replaces component-level local state
  Supports granular level and category control
  Real-time updates across all logging components
end note

@enduml
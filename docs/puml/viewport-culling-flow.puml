@startuml viewport-culling-flow
!theme plain
skinparam backgroundColor #FFFFFF
skinparam sequenceStyle strictuml

title Intelligent Visual Importance Thinning System Flow

actor User
participant "ViewportFilteredEvents" as VFE
participant "useViewportFiltering Hook" as VFH
participant "Camera/Target Updates" as Camera
participant "TimelineEvents" as Events
participant "BottomBar Debug UI" as Debug
participant "SessionStorage" as Storage

User -> Camera : Move camera or timeline marker
activate Camera

Camera -> VFE : Updated camera/cameraTarget/currentPosition
activate VFE

VFE -> VFH : Call hook with updated parameters
activate VFH

note over VFH
**Viewport Calculation:**
1. Calculate viewport bounds from camera
2. Filter events within visible range
3. Check if thinning needed (> maxEvents)
end note

VFH -> VFH : calculateViewportBounds()
VFH -> VFH : filterEventsInViewport()

alt numThinning > 0 (Too many events)
    note over VFH
    **Intelligent Visual Importance Algorithm:**
    1. Sort events by Z position (oldest to newest)
    2. Find "now" marker position in timeline
    3. Calculate 40% context window (120 cards)
    4. Adapt window if near timeline start
    5. Distribute 60% remaining quota
    end note
    
    VFH -> VFH : findNowIndex(currentPosition)
    VFH -> VFH : calculate40PercentWindow()
    
    note over VFH
    **40% Context Window (120 cards for maxEvents=300):**
    - Ideal: 60 before "now", 60 after "now"
    - If < 60 before: shift window toward future
    - These cards have highest visual importance
    end note
    
    VFH -> VFH : reserveContextWindow()
    
    note over VFH
    **60% Remaining Quota (180 cards for maxEvents=300):**
    - Priority 1: Future events (after window)
    - Priority 2: Past events (newest first)
    - Fill up to remainingQuota capacity
    end note
    
    VFH -> VFH : selectFutureEvents(afterWindow)
    VFH -> VFH : selectPastEvents(beforeWindow)
    
    alt Still exceeds maxEvents
        note over VFH
        **"Every Other Card" Thinning:**
        - Past: Remove every 2nd (oldest first)
        - Future: Remove every 2nd (newest first)
        - Independent patterns each side
        end note
        
        VFH -> VFH : applyEveryOtherThinning()
    end
    
    VFH -> Storage : Store thinned event IDs
    VFH -> Storage : Set isViewportThinning = true
    
else No Thinning Required
    VFH -> Storage : Clear thinned events
    VFH -> Storage : Set isViewportThinning = false
end

VFH -> Storage : Store visible events count
VFH -> VFE : Return filtered events
deactivate VFH

VFE -> Events : Render visible events (normal)
activate Events

alt Debug Mode Active
    VFE -> Storage : Retrieve thinned event IDs
    VFE -> Events : Render thinned events with red frames
    Events -> Events : Show red indicator frames
end

VFE -> Storage : Update visibleEventsCount
deactivate VFE

Storage -> Debug : Poll for count updates (150ms)
activate Debug

alt Thinning Active & Debug Mode
    Debug -> Debug : Show clickable count badge with red border
    Debug -> Debug : Display scissors icon
    
    User -> Debug : Click count badge
    Debug -> Events : Toggle showThinnedCards state
    Events -> Events : Show/hide red frame overlays
end

deactivate Events
deactivate Camera
deactivate Debug

note over User, Storage
**Visual Importance Hierarchy (maxEvents=300):**
✅ Highest: 40% window around "now" marker (120 cards)
✅ Medium: Future events (upcoming)
✅ Lowest: Past events (historical)
✅ Adaptive window positioning near timeline start
✅ "Every other card" for overflow handling
✅ Debug visualization with red frames
✅ Always maintains exactly 300 cards maximum
end note

@enduml